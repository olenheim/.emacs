;; Object business/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "business/"
  :tables
  (list
    (semanticdb-table "client.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("business/client.h" include nil nil [1 29])
            ("business/kafkaInput.h" include nil nil [30 62])
            ("boost/bind.hpp" include (:system-flag t) nil [63 88])
            ("time.h" include (:system-flag t) nil [89 106])
            ("util/endian.h" include nil nil [107 131])
            ("util/my_app.h" include nil nil [132 156])
            ("util/vector_wrapper.h" include nil nil [157 189])
            ("business/messages/parser.h" include nil nil [190 227])
            ("business/messages/CommonMsg.pb.h" include nil nil [228 271])
            ("business/messages/HeartbeatRequest.pb.h" include nil nil [272 322])
            ("business/messages/LogFileBlock.pb.h" include nil nil [323 369])
            ("business/messages/ErrorRequest.pb.h" include nil nil [370 416])
            ("business/messages/AppRequest.pb.h" include nil nil [417 461])
            ("business/messages/EnvironmentRequest.pb.h" include nil nil [462 514])
            ("business/messages/EventRequest.pb.h" include nil nil [515 561])
            ("business/messages/PlayRequest.pb.h" include nil nil [562 607])
            ("business/messages/MusicPlayRequest.pb.h" include nil nil [608 658])
            ("business/messages/BatchRequest.pb.h" include nil nil [659 705])
            ("business/messages/WidgetRequest.pb.h" include nil nil [706 753])
            ("boost/log/utility/manipulators/add_value.hpp" include (:system-flag t) nil [754 809])
            ("boost" using (:type ("boost" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [811 833])
            ("Client::handler_array" variable
               (:dereference 1
                :default-value "{&Client::HandleHeartbeatMessage,
                                                        &Client::HandleSemsMessage,
                                                        &Client::HandleLogFile,
                                                        &Client::HandleEnvMessage,
                                                        &Client::HandleAppMessage,
                                                        &Client::HandleEventMessage,
                                                        &Client::HandlePlayMessage,
                                                        &Client::HandleMusicPlayMessage,
                                                        &Client::HandleWidgetMessage}"
                :type ("Client::Handler" type (:type "class") nil nil))
                nil [835 1598])
            ("Client::HDFS_level_array" variable
               (:dereference 1
                :default-value "{tracker_severity_level::HDFS_beat_data,
   tracker_severity_level::HDFS_error_data,
   tracker_severity_level::no_processed,
   tracker_severity_level::HDFS_env_data,
   tracker_severity_level::HDFS_app_data,
   tracker_severity_level::HDFS_event_data,
   tracker_severity_level::HDFS_play_data,
   tracker_severity_level::HDFS_music_play_data,
   tracker_severity_level::HDFS_widget_data}"
                :type ("tracker_severity_level" type (:type "class") nil nil))
                nil [1600 2056])
            ("Client::sems_handler_array" variable
               (:dereference 1
                :default-value "{&Client::HandleSemsBeatMsg,
f                                                 &Client::HandleSemsErrMsg,
                                                 &Client::HandleSemsLogMsg,
                                                 &Client::HandleSemsEnvMsg}"
                :type ("Client::Handler" type (:type "class") nil nil))
                nil [2512 2818])
            ("HandleMsg" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("msg" variable
                       (:reference 1
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2861 2868])
                    ("str" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2869 2892])
                    ("level" variable
                       (:reference 1
                        :constant-flag t
                        :type ("tracker_severity_level" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2893 2929]))                  
                :parent "Client")
                nil [2820 3439])
            ("Client" function
               (:constructor-flag t
                :parent "Client"
                :arguments 
                  ( ("s" variable
                       (:reference 1
                        :type ("io_service" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3456 3470])
                    ("fifo" variable
                       (:reference 1
                        :type ("Fifo" type
                             (:template-specifier 
                                ( ("Record" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3471 3490]))                  
                :type ("Client" type (:type "class") nil nil))
                nil [3441 3758])
            ("StartJob" function
               (:parent "Client"
                :type "void")
                nil [3760 4199])
            ("AfterTimeout" function
               (:parent "Client"
                :arguments 
                  ( ("ec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("error_code" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4227 4248]))                  
                :type "void")
                nil [4201 4660])
            ("CloseSocket" function
               (:parent "Client"
                :type "void")
                nil [4662 4721])
            ("Client" function
               (:destructor-flag t
                :parent "Client"
                :type "void")
                nil [4723 4816])
            ("AfterReadHeader" function
               (:parent "Client"
                :arguments 
                  ( ("ec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("error_code" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4847 4868]))                  
                :type "void")
                nil [4818 5503])
            ("AfterReadBody" function
               (:parent "Client"
                :arguments 
                  ( ("ec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("error_code" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5532 5553])
                    ("size" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5554 5568]))                  
                :type "void")
                nil [5505 9087])
            ("HandleHeartbeatMessage" function
               (:parent "Client"
                :type "void")
                nil [9089 9276])
            ("HandleSemsMessage" function
               (:parent "Client"
                :type "void")
                nil [9278 9980])
            ("HandleLogFile" function
               (:parent "Client"
                :type "void")
                nil [9982 10682])
            ("HandleAppMessage" function
               (:parent "Client"
                :type "void")
                nil [10684 10844])
            ("HandleEnvMessage" function
               (:parent "Client"
                :type "void")
                nil [10846 11030])
            ("HandleEventMessage" function
               (:parent "Client"
                :type "void")
                nil [11032 11206])
            ("HandlePlayMessage" function
               (:parent "Client"
                :type "void")
                nil [11208 11375])
            ("HandleMusicPlayMessage" function
               (:parent "Client"
                :type "void")
                nil [11377 11582])
            ("HandleWidgetMessage" function
               (:parent "Client"
                :type "void")
                nil [11584 11765])
            ("HandleSemsBeatMsg" function
               (:parent "Client"
                :type "void")
                nil [11767 11949])
            ("HandleSemsErrMsg" function
               (:parent "Client"
                :type "void")
                nil [11951 12119])
            ("HandleSemsLogMsg" function
               (:parent "Client"
                :type "void")
                nil [12121 12287])
            ("HandleSemsEnvMsg" function
               (:parent "Client"
                :type "void")
                nil [12289 12473])
            ("AfterWriteResponse" function
               (:parent "Client"
                :arguments 
                  ( ("ec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("error_code" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12507 12528]))                  
                :type "void")
                nil [12475 12707]))          
      :file "client.cc"
      :pointmax 12720
      :fsize 12719
      :lastmodtime '(22122 50900 710735 237000)
      :unmatched-syntax nil))
  :file "!home!olivier!tcplogger!code!main!src!business!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
