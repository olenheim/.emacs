;; Object walle/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "walle/"
  :tables
  (list
    (semanticdb-table "WalleTopology.java"
      :major-mode 'jdee-mode
      :tags 
        '( ("com.letv.bigdata.storm.walle" package nil nil [1 38])
            ("backtype.storm.Config" include nil nil [40 69])
            ("backtype.storm.StormSubmitter" include nil nil [70 107])
            ("backtype.storm.topology.TopologyBuilder" include nil nil [108 155])
            ("com.letv.bigdata.storm.walle.bolt.*" include nil nil [156 199])
            ("storm.kafka.BrokerHosts" include nil nil [200 231])
            ("storm.kafka.KafkaSpout" include nil nil [232 262])
            ("storm.kafka.SpoutConfig" include nil nil [263 294])
            ("storm.kafka.ZkHosts" include nil nil [295 322])
            ("WalleTopology" type
               (:typemodifiers ("public")
                :members 
                  ( ("main" function
                       (:throws ("Exception")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("args" variable
                               (:dereference 1
                                :type "String")
                                (reparse-symbol formal_parameters) [417 430]))                          
                        :type "void")
                        (reparse-symbol class_member_declaration) [393 5033])
                    ("getKafkaSpoutConfig" function
                       (:typemodifiers ("private" "static")
                        :arguments 
                          ( ("topic" variable (:type "String") (reparse-symbol formal_parameters) [5087 5099]))                          
                        :type "SpoutConfig")
                        (reparse-symbol class_member_declaration) [5040 5559])
                    ("getKafkaSpoutId" function
                       (:typemodifiers ("private" "static")
                        :arguments 
                          ( ("parseBoltId" variable (:type "String") (reparse-symbol formal_parameters) [5603 5621]))                          
                        :type "String")
                        (reparse-symbol class_member_declaration) [5565 5684])
                    ("getRCBoltId" function
                       (:typemodifiers ("private" "static")
                        :arguments 
                          ( ("parseBoltId" variable (:type "String") (reparse-symbol formal_parameters) [5724 5742]))                          
                        :type "String")
                        (reparse-symbol class_member_declaration) [5690 5801])
                    ("integrate" function
                       (:typemodifiers ("private" "static")
                        :arguments 
                          ( ("builder" variable (:type "TopologyBuilder") (reparse-symbol formal_parameters) [5837 5860])
                            ("boltId" variable (:type "String") (reparse-symbol formal_parameters) [5862 5875])
                            ("streamId" variable (:type "String") (reparse-symbol formal_parameters) [5877 5892])
                            ("subStreamId" variable (:type "String") (reparse-symbol formal_parameters) [5894 5912])
                            ("topic" variable (:type "String") (reparse-symbol formal_parameters) [5920 5932])
                            ("spoutNum" variable (:type "int") (reparse-symbol formal_parameters) [5934 5946])
                            ("boltNum" variable (:type "int") (reparse-symbol formal_parameters) [5948 5959])
                            ("rcboltNum" variable (:type "int") (reparse-symbol formal_parameters) [5961 5974]))                          
                        :type "void")
                        (reparse-symbol class_member_declaration) [5807 6514]))                  
                :type "class")
                nil [360 6516]))          
      :file "WalleTopology.java"
      :pointmax 6517
      :fsize 6671
      :lastmodtime '(22109 26315 507820 593000)
      :unmatched-syntax nil))
  :file "!home!olivier!agnes_storm!code!src!main!java!com!letv!bigdata!storm!walle!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
